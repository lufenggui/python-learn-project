# -*- coding: utf-8 -*-
#!/usr/bin/python
'''
机器学习模型不能直接看到、听到或感知输入样本。您必须创建数据表示，
为模型提供有用的信号来了解数据的关键特性。
也就是说，为了训练模型，您必须选择最能代表数据的特征集。


表示 (Representation)：特征工程
特征工程指的是将原始数据转换为特征矢量



#########################
缩放数据方法

要缩放数字数据，一种显而易见的方法是将 [最小值，最大值] 以线性方式映射到较小的范围，例如 [-1，+1]。
另一种热门的缩放策略是计算每个值的 Z 得分。Z 得分与距离均值的标准偏差数相关。换而言之：
scaledvalue=(value−mean)/stddev.
例如，给定以下条件：
均值 = 100
标准偏差 = 20
原始值 = 130
则：
  scaled_value = (130 - 100) / 20
  scaled_value = 1.5
使用 Z 得分进行缩放意味着，大多数缩放后的值将介于 -3 和 +3 之间，而少量值将略高于或低于该范围。



#########################
分箱值

我们现在拥有 11 个不同的布尔值特征（LatitudeBin1、LatitudeBin2、…、LatitudeBin11），而不是一个浮点特征。拥有 11 个不同的特征有点不方便，因此我们将它们统一成一个 11 元素矢量。
这样做之后，我们可以将纬度 37.4 表示为：
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]


为了简单起见，我们在纬度样本中使用整数作为分箱边界。
如果我们需要更精细的解决方案，我们可以每隔 1/10 个纬度拆分一次分箱边界。添加更多箱可让模型从纬度 37.4 处学习和维度 37.5 处不一样的行为，
但前提是每 1/10 个纬度均有充足的样本可供学习。
另一种方法是按分位数分箱，这种方法可以确保每个桶内的样本数量是相等的。按分位数分箱完全无需担心离群值。
'''
